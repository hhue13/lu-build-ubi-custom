##
## mount -t vboxsf host /host
## cd /host/dockerSrc/cog/dockerFiles/centos
## time docker build -f Dockerfile.ubi8 -t s008aa39r.staden.gotheborg.net:18444/ubi8-minimal:8.7 . 2>&1 | tee /tmp/build.centos.custom.$(date +"%Y%m%d_%H%M%S").txt.out
## time docker build -f Dockerfile.ubi9 -t s008aa39r.staden.gotheborg.net:18444/ubi9-minimal:9.2 . 2>&1 | tee /tmp/build.centos.custom.$(date +"%Y%m%d_%H%M%S").txt.out

FROM registry.access.redhat.com/ubi8-minimal:8.7-1107

LABEL name="s008aa39r.staden.gotheborg.net:18444/ubi8-minimal" version="8.7"
##
## Copy files for the EPEL repo so that we can install from there
COPY RPM-GPG-KEY-EPEL-8 /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-8
COPY epel8.repo /etc/yum.repos.d/epel.repo

RUN microdnf -y install glibc-langpack-se glibc-langpack-sv; sed -i 's/^LANG=.*/LANG="ev_SE.utf8"/' /etc/locale.conf
ENV LANG="ev_SE.utf8"
	##
	## Install bind-utils and epel repository first
RUN	microdnf -y install bind-utils  && \
	##
	## Now install additional packages
	microdnf -y install bzip2 \
	cadaver \
##### 	curl-minimal \
	curl \
	findutils \
	file \
	gcc \
	hostname \
	iputils \
	iproute \
##### 	initscripts \
##### 	ksh.x86_64 \
	less \
	libaio.i686 \
	libaio.x86_64 \
	libstdc++.i686 \
	libstdc++-static.i686 \
	libstdc++-static.x86_64 \
	libstdc++.x86_64 \
	nc \
	net-tools \
##### 	nfs-utils.x86_64 \
	numactl-libs.i686 \
	numactl-libs.x86_64 \
	openssh-clients.x86_64 \
	openssl.x86_64 \
	openssh-server.x86_64 \
	pam.i686 \
	pam.x86_64 \
	perl \
	python2 \
	python2-devel \
	python3-devel \
	python3-pip \
	redhat-rpm-config \
	rsync \
	sudo \
        tar \
##### 	telnet \
	unzip \
	vi \
	wget \
	zip && \
	##
	## ubi9 provides a minimal curl which we want to replace with a 
	## full curl.
	microdnf -y update && \
	microdnf -y reinstall glibc-common && \
	microdnf clean all && \
	update-crypto-policies --set LEGACY && \
	/usr/libexec/openssh/sshd-keygen ed25519 && \
	echo "root:start123." | chpasswd && \
	rm -rf /var/cache/yum && \
	pip3 install pycryptodome && \
	ln -s /usr/bin/python2 /usr/bin/python && \
	cd /dev/shm && \
    curl "https://bootstrap.pypa.io/pip/2.7/get-pip.py" -o "get-pip.py" && \
    python get-pip.py && \
    pip install pycrypto && \
	echo "Done ...."
